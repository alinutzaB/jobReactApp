{"version":3,"sources":["Table.js","Form.js","App.js","index.js"],"names":["TableHeader","TableBody","props","rows","characterData","map","row","index","key","name","job","onClick","removeCharacter","Table","this","Component","FormTable","handleChange","event","target","value","setState","submitForm","handleSubmit","state","initialState","type","onChange","App","characters","filter","character","i","fetch","then","result","json","data","className","Form","ReactDOM","render","document","getElementById"],"mappings":"2QAEMA,EAAc,WAClB,OACE,+BACE,4BACE,oCACA,sCAOFC,EAAY,SAAAC,GAChB,IAAMC,EAAOD,EAAME,cAAcC,KAAI,SAACC,EAAKC,GACzC,OACE,wBAAIC,IAAKD,GACP,4BAAKD,EAAIG,MACT,4BAAKH,EAAII,KACT,4BACE,4BAAQC,QAAS,kBAAMT,EAAMU,gBAAgBL,KAA7C,eAOV,OAAO,+BAAQJ,IAiBAU,E,iLAbH,IACAT,EAAkBU,KAAKZ,MAAvBE,cACAQ,EAAmBE,KAAKZ,MAAxBU,gBAER,OACE,+BACE,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAWR,cAAeA,EAAeQ,gBAAmBA,S,GARhDG,a,OCcLC,E,YAzCd,WAAYd,GAAQ,IAAD,8BAElB,4CAAMA,KASPe,aAAe,SAAAC,GAAU,IAAD,EAEFA,EAAMC,OAArBV,EAFiB,EAEjBA,KAAMW,EAFW,EAEXA,MAEZ,EAAKC,SAAL,eACEZ,EAAMW,KAhBU,EAoBnBE,WAAa,WACX,EAAKpB,MAAMqB,aAAa,EAAKC,OAC7B,EAAKH,SAAS,EAAKI,eAlBpB,EAAKA,aAAe,CACnBhB,KAAM,GACNC,IAAK,IAEN,EAAKc,MAAQ,EAAKC,aARA,E,sEAyBT,IAAD,EACYX,KAAKU,MAAlBf,EADC,EACDA,KAAMC,EADL,EACKA,IAEb,OACC,8BACC,uCACA,2BAAOgB,KAAK,OAAOjB,KAAK,OAAOW,MAAOX,EAAMkB,SAAUb,KAAKG,eAC3D,sCACK,2BAAOS,KAAK,OAAOjB,KAAK,MAAMW,MAAOV,EAAKiB,SAAUb,KAAKG,eACzD,2BAAOS,KAAK,SAASN,MAAM,SAAST,QAASG,KAAKQ,kB,GApCnCP,aCgDTa,E,2MA7CdJ,MAAQ,CACPK,WAAa,I,EAkBdjB,gBAAkB,SAAAL,GAAU,IACjBsB,EAAe,EAAKL,MAApBK,WAER,EAAKR,SAAS,CACZQ,WAAYA,EAAWC,QAAO,SAACC,EAAWC,GACxC,OAAOA,IAAMzB,Q,EAKpBgB,aAAe,SAAAQ,GACd,EAAKV,SAAS,CAAEQ,WAAW,GAAD,mBAAM,EAAKL,MAAMK,YAAjB,CAA6BE,O,mFAzBjC,IAAD,OAGjBE,MAFW,kGAGRC,MAAK,SAAAC,GAAM,OAAIA,EAAOC,UACtBF,MAAK,SAAAC,GACJ,EAAKd,SAAS,CACZgB,KAAMF,S,+BAqBP,IACDN,EAAef,KAAKU,MAApBK,WAER,OACC,yBAAKS,UAAU,aACb,kBAAC,EAAD,CAAOlC,cAAeyB,EAAYjB,gBAAiBE,KAAKF,kBACxD,kBAAC2B,EAAD,CAAWhB,aAAcT,KAAKS,oB,GAxCjBR,aCGlByB,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.29da7b8a.chunk.js","sourcesContent":["import React, { Component } from 'react'\n\nconst TableHeader = () => {\n  return (\n    <thead>\n      <tr>\n        <th>Name</th>\n        <th>Job</th>\n      </tr>\n    </thead>\n  )\n}\n\n\nconst TableBody = props => {\n  const rows = props.characterData.map((row, index) => {\n    return (\n      <tr key={index}>\n        <td>{row.name}</td>\n        <td>{row.job}</td>\n        <td>\n          <button onClick={() => props.removeCharacter(index)}>Delete</button>\n        </td>\n      </tr>\n    )\n  })\n\n\nreturn <tbody>{rows}</tbody>\n}\n\nclass Table extends Component {\n  render() {\n    const { characterData } = this.props\n    const { removeCharacter} = this.props\n\n    return (\n      <table>\n        <TableHeader />\n        <TableBody characterData={characterData} removeCharacter = {removeCharacter} />\n      </table>\n    )\n  }\n}\n\nexport default Table","import React, {Component} from 'react'\n\nclass FormTable extends Component {\n\t\n\tconstructor(props) {\n\t\t\n\t\tsuper(props)\n\t\t\n\t\tthis.initialState = {\n\t\t\tname: \"\",\n\t\t\tjob: \"\",\n\t\t}\n\t\tthis.state = this.initialState\n\t}\n\n\thandleChange = event => {\n\t\n\t\tconst{name, value} = event.target\n\t\n\t\tthis.setState({\n\t\t\t[name]:value,\n\t\t})\n\t}\n\n\tsubmitForm = () => {\n\t  this.props.handleSubmit(this.state)\n\t  this.setState(this.initialState)\n\t}\n\n\trender() {\n\t\tconst {name, job} = this.state\n\n\t\treturn (\n\t\t\t<form>\n\t\t\t\t<label>Name</label>\n\t\t\t\t<input type=\"text\" name=\"name\" value={name} onChange={this.handleChange} />\n\t\t\t\t<label>Job</label>\n      \t\t\t<input type=\"text\" name=\"job\" value={job} onChange={this.handleChange} />\n      \t\t\t<input type=\"button\" value=\"Submit\" onClick={this.submitForm} />\n\t\t\t</form>\n\t\t) \n\t}\n\n}\n\nexport default FormTable;","import React, {Component} from'react';\nimport Table from './Table';\nimport FormTable from './Form';\n\nclass App extends Component {\n\tstate = {\n\t\tcharacters : [],\n\t}\n\n\t // Code is invoked after the component is mounted/inserted into the DOM tree.\n  \tcomponentDidMount() {\n\t    const url = 'https://en.wikipedia.org/w/api.php?action=opensearch&search=Seona+Dancing&format=json&origin=*'\n\n\t\t    fetch(url)\n\t\t      .then(result => result.json())\n\t\t      .then(result => {\n\t\t        this.setState({\n\t\t          data: result,\n\t\t        })\n\t    })\n\t}\n\n\n\n\tremoveCharacter = index => {\n\t\t  const { characters } = this.state\n\n\t\t  this.setState({\n\t\t    characters: characters.filter((character, i) => {\n\t\t      return i !== index\n\t\t    }),\n\t\t  })\n\t\t}\n\n\thandleSubmit = character => {\n\t\tthis.setState({ characters: [...this.state.characters, character] })\n\t}\n\t\n\trender() {\n\t\tconst { characters } = this.state\n\n\t\treturn(\n\t\t\t<div className=\"container\">\n\t\t\t\t <Table characterData={characters} removeCharacter={this.removeCharacter} />\n\t\t\t\t <FormTable handleSubmit={this.handleSubmit} />\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;","import React, {Component} from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport Table from './Table';\n\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}